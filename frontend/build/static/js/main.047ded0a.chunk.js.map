{"version":3,"sources":["components/Authentication/Login.js","components/Authentication/Signup.js","Pages/HomePage.js","components/SingleChat.js","Context/ChatProvider.js","components/miscellenous/ProfileModel.js","components/ChatLoading.js","components/userAvatar/UserListItem.js","config/ChatLogics.js","components/miscellenous/SideDrawer.js","components/userAvatar/UserBadgeItem.js","components/miscellenous/UpdateGroupChatModal.js","components/ScrollableChat.js","components/ChatBox.js","components/miscellenous/GroupChatModal.js","components/MyChats.js","Pages/ChatPage.js","App.js","index.js"],"names":["Login","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","loading","setLoading","toast","useToast","history","useHistory","submitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","description","localStorage","setItem","JSON","stringify","push","t0","response","message","stop","apply","arguments","_jsxs","VStack","spacing","color","children","FormControl","id","isRequired","_jsx","FormLabel","Input","value","placeholder","onChange","e","target","InputGroup","type","InputRightElement","width","Button","h","size","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","name","setName","_useState9","_useState10","confirmpassword","setConfirmpassword","_useState11","_useState12","pic","setPic","_useState13","_useState14","handleClick","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","HomePage","socket","selectedChatCompare","useEffect","parse","getItem","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","TabList","mb","Tab","TabPanels","TabPanel","ChatContext","createContext","ChatState","useContext","ChatProvider","user","setUser","selectedChat","setSelectedChat","chats","setChats","notification","setNotification","userInfo","Provider","ProfileModel","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ChatLoading","Stack","Skeleton","height","UserListItem","handleFunction","cursor","_hover","background","px","py","Avatar","mr","Email","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","SideDrawer","search","setSearch","searchResult","setSetsearchResult","loadingChat","setLoadingChat","_ChatState","handleSearch","_yield$axios$get","Authorization","concat","token","get","accessChat","_ref2","_callee2","_context2","find","c","_toConsumableArray","_x","Tooltip","label","hasArrow","placement","class","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","pl","map","notif","MenuItem","chat","filter","n","isGroupChat","chatName","as","rightIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","pb","Spinner","ml","UserBadgeItem","admin","Badge","CloseIcon","UpdateGroupChatModal","fetchAgain","setFetchAgain","fetchMessages","groupChatName","setGroupChatName","setSearchResult","renameloading","setRenameLoading","query","handleRename","_ref3","_yield$axios$put","put","chatId","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","ScrollableChat","ScrollableFeed","display","mt","backgroundColor","marginLeft","padding","maxWidth","content","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","isTyping","setIsTyping","emit","sendMessage","event","key","io","on","newMessageRecieved","includes","ArrowBackIcon","ProfileModal","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","lastTypingTime","Date","getTime","setTimeout","Chatbox","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","AddIcon","ChatPage","ChatBox","App","Route","path","component","exact","ReactDOM","render","BrowserRouter","ChakraProvider","document","getElementById"],"mappings":"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","file":"static/js/main.047ded0a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack } from '@chakra-ui/react'\r\nimport { useToast } from '@chakra-ui/react'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nfunction Login() {\r\n  const [show, setShow] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n\r\n  const handleClick = ()=> setShow(!show);\r\n\r\n\r\n  const submitHandler = async()=> {\r\n    setLoading(true);\r\n    \r\n    if(!email || !password){\r\n      toast({\r\n        title: 'Please fill all the feilds',\r\n        status: 'warning',\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n      });\r\n\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\" : \"application/json\", \r\n        },\r\n      };\r\n\r\n      const {data} = await axios.post(\"/api/user/login\", {email, password}, config); // it creates account\r\n      \r\n      toast({\r\n        title: 'Login Successful..',\r\n        description: \"It's great, Your are Welcome.\",\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push('/chats');\r\n\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error Occured',\r\n        description: error.response.data.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <VStack spacing='5px' color='black'>\r\n      <FormControl id='email' isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input \r\n         value={email}\r\n         placeholder='Enter your Email'\r\n         onChange={(e)=>setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id='password' isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input \r\n          value={password}\r\n          type={show ? 'text' : 'password'}\r\n          placeholder='Enter your Password'\r\n          onChange={(e)=>setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width='4.5rem'>\r\n            <Button h='1.75rem' size='sm' onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      \r\n      <Button \r\n       colorScheme='blue'\r\n       width='100%'\r\n       style={{marginTop: 15}}\r\n       onClick={submitHandler}\r\n       isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n\r\n      <Button \r\n       variant='solid'\r\n       colorScheme='red'\r\n       width='100%'\r\n       onClick={()=>{\r\n        setEmail('guest@gmail.com');\r\n        setPassword('1234567');\r\n       }}\r\n      >\r\n        Get Guest User Credentials\r\n      </Button>\r\n    </VStack>\r\n  )\r\n};\r\n\r\nexport default Login","import React, { useState } from 'react'\r\nimport { Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack } from '@chakra-ui/react'\r\nimport { useToast } from '@chakra-ui/react'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nfunction Signup() {\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n\r\n  const handleClick = ()=> setShow(!show);\r\n  \r\n\r\n  const postDetails = (pics)=> {\r\n    setLoading(true);\r\n\r\n    if(pics === undefined){\r\n      toast({\r\n        title: 'Please Select an Image',\r\n        status: 'warning',\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(pics.type === \"image/jpeg\" || pics.type === \"image/png\"){\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"mern-chat-app\");\r\n      data.append(\"cloud_name\", \"dtsi0uvsr\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dtsi0uvsr/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      }).then((res) => res.json())\r\n      .then(data => {\r\n        setPic(data.url.toString());\r\n        // console.log(data.url.toString()); //pic uploded link to cloudinary\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n      });\r\n    }\r\n    else{\r\n      toast({\r\n        title: 'Please Select an Image',\r\n        status: 'warning',\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const submitHandler = async()=> {\r\n    setLoading(true);\r\n    if(!name || !email || !password || !confirmpassword){\r\n      toast({\r\n        title: 'Please fill all the fields',\r\n        status: 'warning',\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if(password !== confirmpassword){\r\n      toast({\r\n        title: 'Passwords Do not Match',\r\n        status: 'warning',\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\" : \"application/json\", \r\n        },\r\n      };\r\n\r\n      const {data} = await axios.post(\"/api/user\", {name, email, password, pic}, config); // it creates account\r\n      \r\n      toast({\r\n        title: 'Account created Successfully..',\r\n        description: \"Please Login to Access Your Account.\",\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push('/chats');\r\n\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error Occured',\r\n        description: error.response.data.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <VStack spacing='5px' color='black'>\r\n      <FormControl id='first-name' isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input \r\n         placeholder='Enter your name'\r\n         onChange={(e)=>setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id='email' isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input \r\n         placeholder='Enter your Email'\r\n         onChange={(e)=>setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id='password' isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input \r\n          type={show ? 'text' : 'password'}\r\n          placeholder='Enter your Password'\r\n          onChange={(e)=>setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width='4.5rem'>\r\n            <Button h='1.75rem' size='sm' onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      \r\n      <FormControl id='confirm-password' isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup>\r\n          <Input \r\n          type={show ? 'text' : 'password'}\r\n          placeholder='Confirm your Password'\r\n          onChange={(e)=>setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width='4.5rem'>\r\n            <Button h='1.75rem' size='sm' onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <FormControl id='pic'>\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n         type=\"file\"\r\n         p={1.5}\r\n         accept=\"image/*\"\r\n         onChange={(e)=>postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n\r\n      <Button \r\n       colorScheme='blue'\r\n       width='100%'\r\n       style={{marginTop: 15}}\r\n       onClick={submitHandler}\r\n       isLoading={loading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  )\r\n  \r\n}\r\n\r\nexport default Signup","import React, { useEffect } from 'react'\r\nimport { Box, Container, Tab, TabList, TabPanel, TabPanels, Tabs, Text } from '@chakra-ui/react'\r\nimport Login from '../components/Authentication/Login'\r\nimport Signup from '../components/Authentication/Signup'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction HomePage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) history.push(\"/chats\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg={\"white\"}\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text fontSize=\"4xl\" fontFamily=\"work sans\" color=\"black\">\r\n          Mern Chat App\r\n        </Text>\r\n      </Box>\r\n\r\n      <Box\r\n       bg=\"white\"\r\n       w=\"100%\"\r\n       p={4} \r\n       borderRadius=\"lg\" \r\n       borderWidth=\"1px\"\r\n       color='black'\r\n       >\r\n        <Tabs variant=\"soft-rounded\">\r\n          <TabList mb='1em'>\r\n            <Tab w='50%'>Login</Tab>\r\n            <Tab w='50%'>Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login/>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Signup/>\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage","import React from 'react'\r\nimport { ChatState } from '../Context/ChatProvider';\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport UpdateGroupChatModal from \"./miscellenous/UpdateGroupChatModal\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport ProfileModal  from \"./miscellenous/ProfileModel\";\r\nimport { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport io from \"socket.io-client\";\r\nimport Lottie from \"lottie-react\";\r\n\r\nimport animationData from \"../animations/type.json\";\r\n\r\nconst ENDPOINT = \"http://localhost:5000\";\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\nconst { selectedChat, setSelectedChat, user, notification, setNotification } = ChatState();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        \r\n        socket.emit(\"new message\", data);      \r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    selectedChatCompare = selectedChat;\r\n  }, [selectedChat]);\r\n\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        \r\n        if(!notification.includes(newMessageRecieved)){\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n\r\n            {messages && !selectedChat.isGroupChat ? (\r\n              <>\r\n                {getSender(user, selectedChat.users)}\r\n                <ProfileModal user={getSenderFull(user, selectedChat.users)} />\r\n              </> \r\n            ) : (\r\n              <>\r\n                {selectedChat.chatName.toUpperCase()}\r\n                <UpdateGroupChatModal\r\n                  fetchMessages={fetchMessages}\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                />\r\n              </>\r\n            )}\r\n          </Text>\r\n          <Box\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl\r\n              onKeyDown={sendMessage}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              \r\n              {isTyping ? (\r\n                // <div>\r\n                //   <Lottie\r\n                //     options={defaultOptions}\r\n                //     // height={50}\r\n                //     width={70}\r\n                //     style={{ marginBottom: 15, marginLeft: 0 }}\r\n                //   />\r\n                // </div>\r\n\r\n                <div>Typing...</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              \r\n              <Input \r\n                 variant=\"filled\"\r\n                 bg=\"#E0E0E0\"\r\n                 placeholder=\"Enter a message..\"\r\n                 value={newMessage}\r\n                 onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            start chat\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SingleChat\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [user, setUser] = useState();\r\n  const [selectedChat,setSelectedChat ] = useState();\r\n  const [chats,setChats ] = useState([]);\r\n  const [notification, setNotification] = useState([]);    \r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n      const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      setUser(userInfo);\r\n  \r\n      if (!userInfo) history.push(\"/\");\r\n    }, [history]);\r\n    \r\n\r\n    return (\r\n      <ChatContext.Provider\r\n        value={{\r\n          user,\r\n          setUser,\r\n          selectedChat,\r\n          setSelectedChat,\r\n          chats,\r\n          setChats,\r\n          notification,\r\n          setNotification\r\n        }}\r\n      >\r\n        {children}\r\n      </ChatContext.Provider>\r\n    );\r\n};\r\n    \r\nexport const ChatState = () => {\r\n    return useContext(ChatContext);\r\n};\r\n  \r\nexport default ChatProvider;\r\n","import React from 'react'\r\nimport {useDisclosure} from '@chakra-ui/hooks'\r\nimport { ViewIcon } from '@chakra-ui/icons'\r\nimport {\r\n  IconButton,\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\n\r\n\r\nconst ProfileModel = ({user, children}) => {\r\n  \r\n  const {isOpen, onOpen, onClose} = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n      )}\r\n\r\n      <Modal  size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody   d=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\">\r\n          <Image\r\n              borderRadius=\"full\"\r\n              boxSize=\"150px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Work sans\"\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n\r\n\r\n          \r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileModel","import { Stack } from \"@chakra-ui/layout\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;","import React from 'react';\r\nimport {Box,Text,Avatar} from '@chakra-ui/react'\r\n\r\nconst UserListItem = ({user,handleFunction}) => {\r\n\r\n  return (\r\n    <Box\r\n     onClick={handleFunction}\r\n     cursor='pointer'\r\n     bg='#E8E8E8'\r\n    _hover = {{\r\n      background: \"#3882AC\",\r\n      color: 'white',\r\n    }}\r\n    w='100%'\r\n    d='flex'\r\n    alignItems='center'\r\n    color='black'\r\n    px={3}\r\n    py={2}\r\n    mb={2}\r\n    borderRadius='lg'\r\n    >\r\n      <Avatar \r\n       mr={2}\r\n       size='sm'\r\n       cursor='pointer'\r\n       name={user.name}\r\n       src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize='xs'><b>Email: </b>{user.Email}</Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n    if (\r\n      i < messages.length - 1 &&\r\n      messages[i + 1].sender._id === m.sender._id &&\r\n      messages[i].sender._id !== userId\r\n    )\r\n      return 33;\r\n    else if (\r\n      (i < messages.length - 1 &&\r\n        messages[i + 1].sender._id !== m.sender._id &&\r\n        messages[i].sender._id !== userId) ||\r\n      (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n    )\r\n      return 0;\r\n    else return \"auto\";\r\n  };\r\n  \r\n  export const isSameSender = (messages, m, i, userId) => {\r\n    return (\r\n      i < messages.length - 1 &&\r\n      (messages[i + 1].sender._id !== m.sender._id ||\r\n        messages[i + 1].sender._id === undefined) &&\r\n      messages[i].sender._id !== userId\r\n    );\r\n  };\r\n  \r\n  export const isLastMessage = (messages, i, userId) => {\r\n    return (\r\n      i === messages.length - 1 &&\r\n      messages[messages.length - 1].sender._id !== userId &&\r\n      messages[messages.length - 1].sender._id\r\n    );\r\n  };\r\n  \r\n  export const isSameUser = (messages, m, i) => {\r\n    return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n  };\r\n  \r\n  export const getSender = (loggedUser, users) => {\r\n    return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\r\n  };\r\n  \r\n  export const getSenderFull = (loggedUser, users) => {\r\n    return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n  };","import {\r\n  Box,\r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuList,\r\n  MenuItem,\r\n  Text,\r\n  Input,\r\n  Tooltip,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport ProfileModel from \"./ProfileModel\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport UserListItem from '../userAvatar/UserListItem'\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nimport NotificationBadge from \"react-notification-badge\";\r\nimport { Effect } from \"react-notification-badge\";\r\n\r\nconst SideDrawer = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSetsearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState();\r\n\r\n  const { user, setSelectedChat, chats ,setChats, notification, setNotification} = ChatState();\r\n  const history = useHistory();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSetsearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n\r\n    try {\r\n      setLoadingChat(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } \r\n    catch(error){\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search Users To Chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={onOpen}>\r\n            <i class=\"fas fa-search\"></i>\r\n            <Text d={{ base: \"none\", md: \"flex\" }}>Seach User</Text>\r\n          </Button>\r\n        </Tooltip>\r\n\r\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\r\n          Talk-A-Tive\r\n        </Text>\r\n\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <NotificationBadge \r\n               count={notification.length}\r\n               effect={Effect.SCALE}\r\n              />\r\n              <BellIcon fontSize=\"2xl\" m={1} />\r\n            </MenuButton>\r\n\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map(notif => (\r\n                <MenuItem key={notification._id} onClick={()=>{\r\n                  setSelectedChat(notif.chat);\r\n                  setNotification(notification.filter((n) => n !== notif ));\r\n                }}>\r\n                  {notif.chat.isGroupChat \r\n                  ? `New Message in ${notif.chat.chatName}` \r\n                  : `New Message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n\r\n          </Menu>\r\n\r\n          <Menu>\r\n            <MenuButton as={Button} rightIcon={<chevronDownIcon />}>\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList>\r\n              <ProfileModel user={user}>\r\n                <MenuItem>My Profile</MenuItem>\r\n              </ProfileModel>\r\n\r\n              <MenuDivider />\r\n\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box d=\"flex\" pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n\r\n            {loading ? (\r\n              <ChatLoading/>\r\n            ) : (\r\n              searchResult?.map(user => (\r\n                <UserListItem \r\n                 key={user._id}\r\n                 user={user}\r\n                 handleFunction={()=>accessChat(user._id)}\r\n                />\r\n              ))\r\n            )}  \r\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge } from \"@chakra-ui/layout\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;","import React from 'react'\r\nimport { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchAgain, setFetchAgain, fetchMessages}) => {\r\nconst { isOpen, onOpen, onClose } = useDisclosure();\r\nconst [groupChatName, setGroupChatName] = useState();\r\nconst [search, setSearch] = useState(\"\");\r\nconst [searchResult, setSearchResult] = useState([]);\r\nconst [loading, setLoading] = useState(false);\r\nconst [renameloading, setRenameLoading] = useState(false);\r\nconst toast = useToast();\r\n\r\nconst { selectedChat, setSelectedChat, user } = ChatState();\r\n \r\n\r\nconst handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/rename`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/addgroup`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/removegroup`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameloading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateGroupChatModal","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;","import { Box } from \"@chakra-ui/layout\";\r\n// import \"./styles.css\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"68%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chatbox;","import {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    useDisclosure,\r\n    FormControl,\r\n    Input,\r\n    useToast,\r\n    Box,\r\n  } from \"@chakra-ui/react\";\r\n  import axios from \"axios\";\r\n  import { useState } from \"react\";\r\n  import { ChatState } from \"../../Context/ChatProvider\";\r\n//   import UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\n  import UserListItem from \"../userAvatar/UserListItem\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\n  \r\n  const GroupChatModal = ({ children }) => {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [groupChatName, setGroupChatName] = useState();\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const toast = useToast();\r\n  \r\n    const { user, chats, setChats } = ChatState();\r\n  \r\n    const handleGroup = (userToAdd) => {\r\n      if (selectedUsers.includes(userToAdd)) {\r\n        toast({\r\n          title: \"User already added\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"top\",\r\n        });\r\n        return;\r\n      }\r\n  \r\n      setSelectedUsers([...selectedUsers, userToAdd]);\r\n    };\r\n  \r\n    const handleSearch = async (query) => {\r\n      setSearch(query);\r\n      if (!query) {\r\n        return;\r\n      }\r\n  \r\n      try {\r\n        setLoading(true);\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n        setLoading(false);\r\n        setSearchResult(data);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to Load the Search Results\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom-left\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    const handleDelete = (delUser) => {\r\n      setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n    };\r\n  \r\n    const handleSubmit = async () => {\r\n      if (!groupChatName || !selectedUsers) {\r\n        toast({\r\n          title: \"Please fill all the feilds\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"top\",\r\n        });\r\n        return;\r\n      }\r\n  \r\n      try {\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        const { data } = await axios.post(\r\n          `/api/chat/group`,\r\n          {\r\n            name: groupChatName,\r\n            users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n          },\r\n          config\r\n        );\r\n        setChats([data, ...chats]);\r\n        onClose();\r\n        toast({\r\n          title: \"New Group Chat Created!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Failed to Create the Chat!\",\r\n          description: error.response.data,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <span onClick={onOpen}>{children}</span>\r\n  \r\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader\r\n              fontSize=\"35px\"\r\n              fontFamily=\"Work sans\"\r\n              d=\"flex\"\r\n              justifyContent=\"center\"\r\n            >\r\n              Create Group Chat\r\n            </ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n              <FormControl>\r\n                <Input\r\n                  placeholder=\"Chat Name\"\r\n                  mb={3}\r\n                  onChange={(e) => setGroupChatName(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <FormControl>\r\n                <Input\r\n                  placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                  mb={1}\r\n                  onChange={(e) => handleSearch(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\r\n                {selectedUsers.map((u) => (\r\n                  <UserBadgeItem\r\n                    key={u._id}\r\n                    user={u}\r\n                    handleFunction={() => handleDelete(u)}\r\n                  />\r\n                ))}\r\n              </Box>\r\n              {loading ? (\r\n                // <ChatLoading />\r\n                <div>Loading...</div>\r\n              ) : (\r\n                searchResult\r\n                  ?.slice(0, 4)\r\n                  .map((user) => (\r\n                    <UserListItem\r\n                      key={user._id}\r\n                      user={user}\r\n                      handleFunction={() => handleGroup(user)}\r\n                    />\r\n                  ))\r\n              )}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n                Create Chat\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default GroupChatModal;","import React from 'react'\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport ChatLoading from './ChatLoading';\r\nimport {getSender} from '../config/ChatLogics';\r\nimport GroupChatModal from './miscellenous/GroupChatModal';\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n  const fetchChats = async () => {\r\n    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        Mychats\r\n        <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MyChats","import { Box } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport SideDrawer from \"../components/miscellenous/SideDrawer\";\r\nimport ChatBox from \"../components/ChatBox\"\r\nimport MyChats from \"../components/MyChats\"\r\nimport { useState } from \"react\";\r\n\r\nfunction ChatPage() {\r\n  const { user } = ChatState();\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n\r\n  return (\r\n    <div style={{width: \"100%\"}}>\r\n      {user && <SideDrawer/>}\r\n      <Box d='flex' justifyContent='space-between' w='100%' h='90vh' p='10px'>\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && <ChatBox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />}\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatPage","import { Route } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport HomePage from './Pages/HomePage'\r\nimport ChatPage from './Pages/ChatPage'\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Route path='/' component={HomePage} exact/>\r\n      <Route path='/chats' component={ChatPage}/>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport ChatProvider from './Context/ChatProvider';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <ChatProvider>\r\n        <ChakraProvider>\r\n          <App />\r\n        </ChakraProvider>,\r\n      </ChatProvider>\r\n    </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}